{"mappings":"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","sources":["src/index.js","src/js/services/modal.js","src/js/services/inputHandler.js","src/js/services/local-storage-api.js","src/js/services/team-modal.js"],"sourcesContent":["\nimport './js/services/buttonLibraryHandler';\nimport \"./js/services/modal\";\nimport './js/services/moviesAPIService';\nimport './js/services/paginationHandler';\nimport './js/services/inputHandler';\nimport './js/services/card';\nimport './js/services/local-storage-api';\nimport './js/services/team-modal';\n\n\n\n\n\n// const moviesApiService = new MoviesApiService();\n\n// console.log(moviesApiService);\n\n// const pagination = new PaginationHandler(\n//   21,\n//   document.querySelector('.pagination__root')\n// );\n\n// pagination.initPagination();\n\n\n// pagination.addEventListener('pageChanged', pageNumber =>\n//   console.log('choosenPage is: ', pageNumber)\n// );\n\n// // inputHandler() Анастасія - параметром сюди передайте свою функцію по рендерінгу, і має спрацювати\n// inputHandler(appendGallery);","import MoviesApiService from './moviesAPIService';\nconst moviesApiService = new MoviesApiService();\n\nconst openModalDescription = document.querySelector('.collection__list');\nconst showModal = document.querySelector('[data-modal]');\nconst closeBtn = document.querySelector('.modal-close__btn');\nconst modal = document.querySelector('.modal-window');\n\n// Підтягування id фільму\nfunction makeMarkup(data) {\n  const markup = `\n        <div class=\"modal-conteiner\">\n            <div class=\"modal-container__banner\">\n                <img class=\"modal-container__img\" src=\"\"\n                    alt=\"Banner of the selected film\">\n            </div>\n            <div class=\"modal-container__row\">\n                <table class=\"modal-table\">\n                    <h2 class=\"modal-table__title\">${data.title}</h2>\n                    <tr class=\"table__row\">\n                        <td class=\"table__description\">Vote / Votes</td>\n                        <td></td>\n                        <td class=\"table__data\"><span class=\"table-data__raiting\">${data.vote_average}</span> / <span\n                                class=\"table-data__scores\">${data.vote_count}</span></td>\n                    </tr>\n                    <tr class=\"table__row\">\n                        <td class=\"table__description\">Popularity</td>\n                        <td></td>\n                        <td class=\"table__data\">${data.popularity}</td>\n                    </tr>\n                    <tr class=\"table__row\">\n                        <td class=\"table__description\">Original Title</td>\n                        <td></td>\n                        <td class=\"table__data\">${data.original_title}</td>\n                    </tr>\n                    <tr class=\"table__row\">\n                        <td class=\"table__description\">Genre</td>\n                        \n                        <td class=\"table__data\">${data.genre_ids}</td>\n                    </tr>\n                </table>\n                <p class=\"modal-container__title\">ABOUT</p>\n                <p class=\"modal-title__description\">${data.overview}</p>\n                <div class=\"modal-conteiner__btn\">\n                    <button type=\"button\" class=\"modal-conteiner__first-btn\">add to Watched</button>\n                    <button type=\"button\" class=\"modal-conteiner__second-btn\">add to queue</button>\n                </div>\n            </div>`;\n\n    // return modal.innerHTML = markup;\n  return modal.insertAdjacentHTML(\"beforeend\", markup)\n}\n\nasync function searchedData(id) {\n  try {\n    // const dataForModalInLocal = localStorage.getItem(\"fetchedMovies\");\n    // const parceDataForModalInLocal = JSON.parse(dataForModalInLocal)\n    const data = await moviesApiService.fetchTrendingMovies(id);\n    console.log(data)\n  \n    const markup = await makeMarkup(data);\n    return markup;\n\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n\n// Додаємо слухача і відкриваємо модальне вікно при кліку на картку\nopenModalDescription.addEventListener('click', onModalClick);\nfunction onModalClick(evt) {\n  evt.preventDefault();\n  if (evt.target.closest('.card')) {\n    window.addEventListener('keydown', onEscKeyPress);\n    showModal.classList.add('is-open');\n    console.log(\"he\")\n    const filmId = evt.srcElement.parentElement.id;\n    searchedData(filmId);\n  };\n};\n\nfunction onModalClose() {\n  modal.innerHTML = \"\";\n  window.removeEventListener('keydown', onEscKeyPress);\n  showModal.classList.remove('is-open');\n}\n// Закриваємо модальне вікно при кліку на бекдроп\nshowModal.addEventListener('click', onBackdropClick);\nfunction onBackdropClick(evt) {\n  if (evt.currentTarget === evt.target) {\n    onModalClose();\n  }\n}\n// Закриття модального вікна при кліку на ESC (події клавіатури обробляються на документі, а не на конкретному елементі)\n\nfunction onEscKeyPress(evt) {\n  if (evt.code === 'Escape') {\n    onModalClose();\n  }\n}\n// Закриваємо модальне вікно при кліку на кнопку\ncloseBtn.addEventListener('click', onModalClose);\n","import MoviesApiService from './moviesAPIService';\nimport { getQuery } from './card';\n\nconst moviesApiService = new MoviesApiService();\n\nconst searchForm = document.querySelector('#search-form');\nconst notification = document.querySelector('.form-warning');\n\nsearchForm.addEventListener('submit', onFormSubmit);\nasync function onFormSubmit(e) {\n  e.preventDefault();\n  notification.classList.add('form-warning--hide');\n  moviesApiService.searchQuery = e.currentTarget.elements.query.value.trim();\n  if (\n    moviesApiService.searchQuery === null ||\n    moviesApiService.searchQuery === ``\n  ) {\n    return;\n  }\n  try {\n    const movieByQuert = await moviesApiService.fetchMoviesByQuery(\n      moviesApiService.searchQuery\n    );\n    if (movieByQuert.results.length === 0) {\n      notification.classList.remove('form-warning--hide');\n      searchForm.reset();\n      return;\n    }\n    getQuery(moviesApiService.searchQuery);\n  } catch (error) {\n    console.log(error);\n  }\n  searchForm.reset();\n}","\n// export default localStorageAPI\n\nimport fetch from './moviesAPIService';\n\nconst getFilms = new fetch();\n\nasync function fetchMovie(){\n  try { const data = await getFilms.fetchTrendingMovies();\n    \n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconsole.log(fetchMovie());\n\nconst LocalStorageAPI =  {\n\n  // Отримання даних за ключем. Повертає дані(об єкт), або null\n  loadData(key) {\n    const localStorageData = localStorage.getItem(key);\n    return JSON.parse(localStorageData);\n  },\n\n  // Запис даних до сховища. Записує дані з ключем key\n  saveData(key, value) {\n    const dataToSave = JSON.stringify(value);\n    localStorage.setItem(key, dataToSave);\n     \n    // витягнути масив через лоад дата із локал стредж\n    // через пуш дозаписати \n  },\n\n  // Отримання колекції фільмів. Повертає масив фільмів, або порожній масив з його попереднім записом до сховища\n  getMovies(key, page) {\n    const movies = this.loadData(key); // отр \n    const totalPages = this.getTotalPage(movies);\n    const result = {movies: this.getPaginationPage(movies, page), totalPages};\n\n    // if (!movies) {\n    //   this.saveData(key, []);\n    //   return [];\n    // } else {\n      return result;\n  }, \n  // має повертати масив муві та тотал пейдж (якщо масив більше 20)\n  // Додавання фільмів до колекції. Додає новий елемент до поточної колекції фільмів у сховищі\n  \n  setMovie(key, value) {\n    const currentCollection = this.getMovies(key);\n    currentCollection.push(value);\n\n    this.saveData(key, currentCollection);\n    // return \n    // try catch \n    //перевірити для відкриття, закриття модалки , \n    // певернути статус коли ОК - закрили модалку, якщо ні - то, перший запис\n  },\n\n  removeMovie(key, value) {\n    const currentCollection = this.getMovies(key);\n    const indexToRemove = currentCollection.indexOf(value);\n\n    if (indexToRemove >= 0) {\n      currentCollection.splice(indexToRemove, 1);\n      this.saveData(key, currentCollection);\n    }\n  },\n\n  getTotalPages(movies) {\n      return Math.ceil(movies.length / 20);\n    },\n\n    getPaginationPage(page, array ){\n\n     const perPage = 20;\n     let start = (page - 1) * perPage;\n     let end = start + perPage;\n     return array.slice(start, end);\n    \n    },\n    \n  getGenres(key){\n\n    myArray = this.loadData(key);\n\n  }\n};\n\n     ","const modal = document.querySelector(`.modal`);\nconst openButton = document.querySelector(`.footer-text-underline`);\nconst closeButton = document.querySelector(`.close`);\nopenButton.addEventListener(\"click\", function(){\n    modal.classList.add(\"is-active\");\n    modal.classList.remove(\"is-hidden\");\n   \n    \n})\ncloseButton.addEventListener(\"click\", function(){\n    modal.classList.remove(\"is-active\");\n    modal.classList.add(\"is-hidden\");\n})"],"names":["parcelRequire","$bpxeT","$3ebdd0622eaf4fca$var$moviesApiService","default","$3ebdd0622eaf4fca$var$openModalDescription","document","querySelector","$3ebdd0622eaf4fca$var$showModal","$3ebdd0622eaf4fca$var$closeBtn","$3ebdd0622eaf4fca$var$modal","$3ebdd0622eaf4fca$var$makeMarkup","data","markup","concat","title","vote_average","vote_count","popularity","original_title","genre_ids","overview","insertAdjacentHTML","$3ebdd0622eaf4fca$var$_searchedData","$parcel$interopDefault","$2TvXO","mark","_callee","id","fetchTrendingMovies","_ctx","sent","console","log","error","t0","apply","this","arguments","$3ebdd0622eaf4fca$var$onModalClose","innerHTML","window","removeEventListener","$3ebdd0622eaf4fca$var$onEscKeyPress","classList","remove","evt","code","addEventListener","preventDefault","target","closest","add","$3ebdd0622eaf4fca$var$searchedData","srcElement","parentElement","currentTarget","$ad35b3374261223d$var$moviesApiService","$hzDU7","$ad35b3374261223d$var$searchForm","$ad35b3374261223d$var$notification","$ad35b3374261223d$var$_onFormSubmit","e","searchQuery","elements","query","value","trim","fetchMoviesByQuery","results","length","reset","$avgP6","getQuery","$f81bc9f24a80f169$var$getFilms","$f81bc9f24a80f169$var$_fetchMovie","$f81bc9f24a80f169$var$fetchMovie","$c030812afeaa29f5$var$modal","$c030812afeaa29f5$var$openButton","$c030812afeaa29f5$var$closeButton"],"version":3,"file":"index.b5ac3984.js.map"}